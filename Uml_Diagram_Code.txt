@startuml
class Aeropuerto {
    - nombre: String
    - ubicacion: String
    - capacidad: int
    --
    + Aeropuerto(nombre: String, ubicacion: String, capacidad: int)
    + getNombre(): String
    + setNombre(nombre: String): void
    + getUbicacion(): String
    + setUbicacion(ubicacion: String): void
    + getCapacidad(): int
    + setCapacidad(capacidad: int): void
}

class Vuelo {
    - numeroVuelo: String
    - origen: String
    - destino: String
    - horaSalida: String
    - horaLlegada: String
    - capacidadMaxima: int
    --
    + Vuelo(numeroVuelo: String, origen: String, destino: String, horaSalida: String, horaLlegada: String, capacidadMaxima: int)
    + getNumeroVuelo(): String
    + setNumeroVuelo(numeroVuelo: String): void
    + getOrigen(): String
    + setOrigen(origen: String): void
    + getDestino(): String
    + setDestino(destino: String): void
    + getHoraSalida(): String
    + setHoraSalida(horaSalida: String): void
    + getHoraLlegada(): String
    + setHoraLlegada(horaLlegada: String): void
    + getCapacidadMaxima(): int
    + setCapacidadMaxima(capacidadMaxima: int): void
}

class Pasajero {
    - nombre: String
    - documento: String
    - vueloAsignado: String
    --
    + Pasajero(nombre: String, documento: String, vueloAsignado: String)
    + getNombre(): String
    + setNombre(nombre: String): void
    + getDocumento(): String
    + setDocumento(documento: String): void
    + getVueloAsignado(): String
    + setVueloAsignado(vueloAsignado: String): void
}

class Sistema {
    - listaAeropuertos: List<Aeropuerto>
    --
    + Sistema()
    + agregarAeropuerto(aeropuerto: Aeropuerto): void
    + getListaAeropuertos(): List<Aeropuerto>
    + buscarAeropuerto(nombre: String): Aeropuerto
    + agregarVuelo(nombreAeropuerto: String, vuelo: Vuelo): void
    + agregarPasajero(numeroVuelo: String, pasajero: Pasajero): void
    + cargarVuelos(nombreAeropuerto: String): List<Vuelo>
    + cargarPasajeros(numeroVuelo: String): List<Pasajero>
    + agregarPiloto(piloto: Piloto): void
    + cargarPilotos(numeroVuelo: String): List<Piloto>
    + agregarEquipaje(equipaje: Equipaje): void
    + cargarEquipaje(propietario: String): List<Equipaje>
}

class Piloto {
    - nombre: String
    - licencia: String
    - vueloAsignado: String
    --
    + Piloto(nombre: String, licencia: String, vueloAsignado: String)
    + getNombre(): String
    + setNombre(nombre: String): void
    + getLicencia(): String
    + setLicencia(licencia: String): void
    + getVueloAsignado(): String
    + setVueloAsignado(vueloAsignado: String): void
}

class Equipaje {
    - propietario: String
    - peso: double
    - esFragil: boolean
    --
    + Equipaje(propietario: String, peso: double, esFragil: boolean)
    + getPropietario(): String
    + setPropietario(propietario: String): void
    + getPeso(): double
    + setPeso(peso: double): void
    + isEsFragil(): boolean
    + setEsFragil(esFragil: boolean): void
}

Aeropuerto "1" --> "*" Vuelo : contiene
Vuelo "1" --> "*" Pasajero : contiene
Sistema "1" --> "*" Aeropuerto : administra
Vuelo "1" --> "2" Piloto : asigna
Pasajero "1" --> "3" Equipaje : tiene
@enduml
